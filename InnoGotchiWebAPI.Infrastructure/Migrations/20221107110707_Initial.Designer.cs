// <auto-generated />
using System;
using InnoGotchiWebAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InnoGotchiWebAPI.Infrastructure.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20221107110707_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollaborationUser", b =>
                {
                    b.Property<int>("CollaborationsId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CollaborationsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CollaborationUser");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Hunger_level")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<string>("Thisty_level")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Characteristic");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Collaboration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Collaboration");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Alive_pets_count")
                        .HasColumnType("integer");

                    b.Property<float>("Average_feeding_period")
                        .HasColumnType("real");

                    b.Property<float>("Average_pet_happiness")
                        .HasColumnType("real");

                    b.Property<float>("Average_pets_age")
                        .HasColumnType("real");

                    b.Property<float>("Average_thirst_quenching")
                        .HasColumnType("real");

                    b.Property<int>("Dead_pets_count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Look", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Body")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Eye")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Mouth")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Nose")
                        .HasColumnType("bytea");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Look");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FarmId")
                        .HasColumnType("integer");

                    b.Property<int>("Feeding_period")
                        .HasColumnType("integer");

                    b.Property<int>("Happiness_days_count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Thist_quenching")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("bytea");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CollaborationUser", b =>
                {
                    b.HasOne("InnoGotchiWebAPI.Domain.Models.Collaboration", null)
                        .WithMany()
                        .HasForeignKey("CollaborationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnoGotchiWebAPI.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Characteristic", b =>
                {
                    b.HasOne("InnoGotchiWebAPI.Domain.Models.Pet", "Pet")
                        .WithMany("Characteristics")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Farm", b =>
                {
                    b.HasOne("InnoGotchiWebAPI.Domain.Models.User", "User")
                        .WithMany("Farms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Look", b =>
                {
                    b.HasOne("InnoGotchiWebAPI.Domain.Models.Pet", "Pet")
                        .WithMany("Looks")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Pet", b =>
                {
                    b.HasOne("InnoGotchiWebAPI.Domain.Models.Farm", "Farm")
                        .WithMany("Pets")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Farm", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.Pet", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Looks");
                });

            modelBuilder.Entity("InnoGotchiWebAPI.Domain.Models.User", b =>
                {
                    b.Navigation("Farms");
                });
#pragma warning restore 612, 618
        }
    }
}
